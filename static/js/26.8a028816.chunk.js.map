{"version":3,"sources":["components/image-uploader/Uploader.js","services/httpService.js","components/form/SelectRole.js","hooks/useStaffSubmit.js","components/Typography/PageTitle.js","services/AdminServices.js","components/form/Error.js","components/form/LabelArea.js","components/form/InputArea.js","pages/EditProfile.js"],"names":["S3_BUCKET","AWS","config","update","accessKeyId","secretAccessKey","myBucket","S3","params","Bucket","region","Uploader","setImageUrl","imageUrl","useState","progress","setProgress","useEffect","console","log","files","setFiles","useDropzone","accept","multiple","maxSize","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","forEach","ACL","Body","Key","name","upload","on","evt","data","Math","round","loaded","total","send","err","Array","isArray","prevState","path","Location","key","thumbs","className","src","alt","revokeObjectURL","length","ele","idx","instance","axios","create","baseURL","timeout","headers","Accept","interceptors","request","use","adminInfo","Cookies","get","JSON","parse","authorization","token","responseBody","response","requests","url","body","then","post","put","patch","delete","SelectRole","setRole","register","label","onChange","e","target","value","required","defaultValue","hidden","useStaffSubmit","id","useContext","AdminContext","state","productread","productwrite","categoryread","categorywrite","customerread","customerwrite","orderread","orderwrite","cuoponread","cuoponwrite","staffsread","staffswrite","inventoryread","inventorywrite","enquiryread","enquirywrite","notificationread","notificationwrite","adminRoles","setAdminRoles","location","useLocation","SidebarContext","isDrawerOpen","closeDrawer","setIsUpdate","useForm","handleSubmit","setValue","clearErrors","errors","formState","roles","read","write","readvalue","writevalue","AdminServices","getStaffById","email","res","fullname","password","phoneno","Date","created_at","jobrole","image","products","category","customer","order","cuopon","staffs","inventory","enquiry","notification","catch","notifyError","pathname","user","role","onSubmit","staffData","joiningDate","updateStaff","notifySuccess","message","registerAdmin","handleChecked","checked","PageTitle","children","loginAdmin","forgetPassword","resetPassword","signUpWithProvider","addStaff","getAllStaff","deleteStaff","Error","errorName","LabelArea","InputArea","type","placeholder","EditProfile","_id","phone"],"mappings":"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","file":"static/js/26.8a028816.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AWS from \"aws-sdk\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FiUploadCloud } from \"react-icons/fi\";\r\n\r\nconst ID = \"AKIASULQMX62UGAJO5VI\";\r\nconst SECRET = \"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\";\r\nconst S3_BUCKET = \"indraniapp\";\r\nconst REGION = \"us-east-2\";\r\n\r\nAWS.config.update({\r\n  accessKeyId: ID,\r\n  secretAccessKey: SECRET,\r\n});\r\nconst myBucket = new AWS.S3({\r\n  params: { Bucket: S3_BUCKET },\r\n  region: REGION,\r\n});\r\nconst Uploader = ({ setImageUrl, imageUrl }) => {\r\n  const [progress, setProgress] = useState(0);\r\n  useEffect(() => {\r\n    console.log(progress);\r\n  }, [progress]);\r\n\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*\",\r\n    multiple: false,\r\n    maxSize: 500000,\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"uploader file has been changed\", files);\r\n    if (files) {\r\n      files.forEach((file) => {\r\n        const params = {\r\n          ACL: \"public-read\",\r\n          Body: file,\r\n          Bucket: S3_BUCKET,\r\n          Key: file.name,\r\n        };\r\n        console.log(\"upload start\");\r\n        myBucket\r\n          .upload(params)\r\n          .on(\"httpUploadProgress\", (evt, data) => {\r\n            console.log(evt, data);\r\n            setProgress(Math.round((evt.loaded / evt.total) * 100));\r\n          })\r\n          .send((err, data) => {\r\n            if (err) {\r\n              console.log(err);\r\n              return;\r\n            }\r\n            if (Array.isArray(imageUrl)) {\r\n              setImageUrl((prevState) => [\r\n                ...prevState,\r\n                { path: data.Location, name: data.key },\r\n              ]);\r\n              console.log(data);\r\n            } else {\r\n              setImageUrl([{ path: data.Location, name: data.key }]);\r\n            }\r\n          });\r\n        // const formData = new FormData();\r\n        // formData.append('img', postFiles);\r\n        // axios({\r\n        //   url: uploadURL,\r\n        //   method: 'POST',\r\n        //   data: formData,\r\n        // })\r\n        //   .then((res) => {\r\n        //     console.log(res.data)\r\n        //     // setImageUrl(`${process.env.REACT_APP_API_BASE_URL}/images/${res.data.images[0]}`);\r\n        //   })\r\n        //   .catch((err) => console.log(err));\r\n      });\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [files]);\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div key={file.name}>\r\n      <div>\r\n        <img\r\n          className=\"inline-flex border-2 border-gray-100 w-24 max-h-24\"\r\n          src={file.preview}\r\n          alt={file.name}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-full text-center\">\r\n      <div\r\n        className=\"px-6 pt-5 pb-6 border-2 border-gray-300 dark:border-gray-600 border-dashed rounded-md cursor-pointer\"\r\n        {...getRootProps()}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <span className=\"mx-auto flex justify-center\">\r\n          <FiUploadCloud className=\"text-3xl text-green-500\" />\r\n        </span>\r\n        <p className=\"text-sm mt-2\">Drag your image here</p>\r\n        <em className=\"text-xs text-gray-400\">\r\n          (Only *.jpeg and *.png images will be accepted)\r\n        </em>\r\n      </div>\r\n      <aside className=\"flex flex-row flex-wrap mt-4\">\r\n        {imageUrl?.length > 0\r\n          ? imageUrl.map((ele, idx) => (\r\n              <img\r\n                key={idx}\r\n                className=\"inline-flex border rounded-md border-gray-100 dark:border-gray-600 w-24 max-h-24 p-2\"\r\n                src={ele.path}\r\n                alt={ele.name}\r\n              />\r\n            ))\r\n          : thumbs}\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n","import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: `${process.env.REACT_APP_API_BASE_URL}`,\r\n  baseURL: `http://192.81.213.186:5000`, //for the production\r\n  // baseURL: `http://localhost:4023`, // for the dev\r\n  // baseURL: `http://localhost:5000`,\r\n  timeout: 500000,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  let adminInfo;\r\n  if (Cookies.get(\"adminInfo\")) {\r\n    adminInfo = JSON.parse(Cookies.get(\"adminInfo\"));\r\n  }\r\n\r\n  return {\r\n    ...config,\r\n    headers: {\r\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\r\n    },\r\n  };\r\n});\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n  get: (url, body, headers) =>\r\n    instance.get(url, body, headers).then(responseBody),\r\n\r\n  post: (url, body, headers) =>\r\n    instance.post(url, body, headers).then(responseBody),\r\n\r\n  put: (url, body, headers) =>\r\n    instance.put(url, body, headers).then(responseBody),\r\n\r\n  patch: (url, body, headers) =>\r\n    instance.patch(url, body, headers).then(responseBody),\r\n\r\n  delete: (url, headers) => instance.delete(url, headers).then(responseBody),\r\n};\r\n\r\nexport default requests;\r\n","import React from 'react';\r\nimport { Select } from '@windmill/react-ui';\r\n\r\nconst SelectRole = ({ setRole, register, name, label }) => {\r\n  return (\r\n    <>\r\n      <Select\r\n        onChange={(e) => setRole(e.target.value)}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n        name={name}\r\n        {...register(`${name}`, {\r\n          required: `${label} is required!`,\r\n        })}\r\n      >\r\n        <option value=\"\" defaultValue hidden>\r\n          Staff role\r\n        </option>\r\n        <option value=\"admin\">Admin</option>\r\n        <option value=\"ceo\">CEO</option>\r\n        <option value=\"manager\">Manager</option>\r\n        <option value=\"accountant\">Accountant</option>\r\n        <option value=\"driver\"> Driver </option>\r\n        <option value=\"security-guard\">Security Guard</option>\r\n        <option value=\"deliver-person\">Delivery Person</option>\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectRole;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Cookies from 'js-cookie';\r\nimport { useLocation } from 'react-router';\r\n\r\nimport AdminServices from '../services/AdminServices';\r\nimport { AdminContext } from '../context/AdminContext';\r\nimport { SidebarContext } from '../context/SidebarContext';\r\nimport { notifyError, notifySuccess } from '../utils/toast';\r\n\r\nconst useStaffSubmit = (id) => {\r\n  const { state } = useContext(AdminContext);\r\n  const { adminInfo } = state;\r\n  const [imageUrl, setImageUrl] = useState([]);\r\n  const [adminRoles, setAdminRoles] = useState({\r\n    productread:false,\r\n    productwrite:false,\r\n    categoryread:false,\r\n    categorywrite:false,\r\n    customerread:false,\r\n    customerwrite:false,\r\n    orderread:false,\r\n    orderwrite:false,\r\n    cuoponread:false,\r\n    cuoponwrite:false,\r\n    staffsread:false,\r\n    staffswrite:false,\r\n    inventoryread:false,\r\n    inventorywrite:false,\r\n    enquiryread:false,\r\n    enquirywrite:false,\r\n    notificationread:false,\r\n    notificationwrite:false,\r\n  });\r\n  const location = useLocation();\r\n  const { isDrawerOpen, closeDrawer, setIsUpdate } = useContext(SidebarContext);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const handleChecked = (e) => {\r\n    setAdminRoles(prevState => ({\r\n      ...prevState,\r\n      [e.target.name]:e.target.checked\r\n    }));\r\n  }\r\n\r\n  const roles = [\r\n    {\r\n      name: \"product\",\r\n      read: \"productread\",\r\n      write: \"productwrite\",\r\n      readvalue: adminRoles.productread,\r\n      writevalue: adminRoles.productwrite,\r\n    },\r\n    {\r\n      name: \"category\",\r\n      read: \"categoryread\",\r\n      write: \"categorywrite\",\r\n      readvalue: adminRoles.categoryread,\r\n      writevalue: adminRoles.categorywrite\r\n    },\r\n    {\r\n      name: \"customer\",\r\n      read: \"customerread\",\r\n      write: \"customerwrite\",\r\n      readvalue: adminRoles.customerread,\r\n      writevalue: adminRoles.customerwrite,\r\n    },\r\n    {\r\n      name: \"order\",\r\n      read: \"orderread\",\r\n      write: \"orderwrite\",\r\n      readvalue: adminRoles.orderread,\r\n      writevalue: adminRoles.orderwrite, \r\n    },\r\n    {\r\n      name: \"cuopon\",\r\n      read: \"cuoponread\",\r\n      write: \"cuoponwrite\",\r\n      readvalue: adminRoles.cuoponread,\r\n      writevalue: adminRoles.cuoponwrite,\r\n    },\r\n    {\r\n      name: \"staffs\",\r\n      read: \"staffsread\",\r\n      write: \"staffswrite\",\r\n      readvalue: adminRoles.staffsread,\r\n      writevalue: adminRoles.staffswrite,\r\n    },\r\n    {\r\n      name: \"inventory\",\r\n      read: \"inventoryread\",\r\n      write: \"inventorywrite\",\r\n      readvalue: adminRoles.inventoryread,\r\n      writevalue: adminRoles.inventorywrite,\r\n    },\r\n    {\r\n      name: \"enquiry\",\r\n      read: \"enquiryread\",\r\n      write: \"enquirywrite\",\r\n      readvalue: adminRoles.enquiryread,\r\n      writevalue: adminRoles.enquirywrite,\r\n    },\r\n    {\r\n      name: \"notification\",\r\n      read: \"notificationread\",\r\n      write: \"notificationwrite\",\r\n      readvalue: adminRoles.notificationread,\r\n      writevalue: adminRoles.notificationwrite,\r\n    },\r\n  ]\r\n\r\n  const onSubmit = (data) => {\r\n    if (!imageUrl) {\r\n      notifyError('Image is required!');\r\n      return;\r\n    }\r\n    const staffData = {\r\n      fullname: data.fullname,\r\n      email: data.email,\r\n      password: data.password,\r\n      phoneno: data.phoneno,\r\n      joiningDate: data.joiningDate,\r\n      jobrole: data.jobrole,\r\n      image: imageUrl[0].path,\r\n      roles: {\r\n          products: {\r\n            read: adminRoles.productread,\r\n            write: adminRoles.productwrite,\r\n          },\r\n          category: {\r\n            read: adminRoles.categoryread,\r\n            write: adminRoles.categoryread,\r\n          },\r\n          customer: {\r\n            read: adminRoles.customerread,\r\n            write: adminRoles.cuoponwrite,\r\n          },\r\n          order: {\r\n            read: adminRoles.orderread,\r\n            write: adminRoles.orderwrite,\r\n          },\r\n          cuopon: {\r\n            read: adminRoles.cuoponread,\r\n            write: adminRoles.cuoponwrite,\r\n          },\r\n          staffs: {\r\n            read: adminRoles.staffsread,\r\n            write: adminRoles.staffswrite,\r\n          },\r\n          inventory: {\r\n            read: adminRoles.inventoryread,\r\n            write: adminRoles.inventorywrite,\r\n          },\r\n          enquiry: {\r\n            read: adminRoles.enquiryread,\r\n            write: adminRoles.enquirywrite,\r\n          },\r\n          notification: {\r\n            read: adminRoles.notificationread,\r\n            write: adminRoles.notificationwrite,\r\n          },\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      console.log(staffData)\r\n      AdminServices.updateStaff(id, staffData)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setIsUpdate(true);\r\n          notifySuccess('Staff Updated Successfully!');\r\n          closeDrawer();\r\n        })\r\n        .catch((err) => {\r\n          notifyError(err.message);\r\n        });\r\n      \r\n    } else {\r\n      AdminServices.registerAdmin(staffData)\r\n        .then((res) => {\r\n          setIsUpdate(true);\r\n          notifySuccess(res.message);\r\n          closeDrawer();\r\n        })\r\n        .catch((err) => notifyError(err.message));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isDrawerOpen) {\r\n      setValue('fullname');\r\n      setValue('email');\r\n      setValue('password');\r\n      setValue('phoneno');\r\n      setValue('joiningDate');\r\n      setValue('jobrole');\r\n      setImageUrl('');\r\n      clearErrors('fullname');\r\n      clearErrors('email');\r\n      clearErrors('password');\r\n      clearErrors('phoneno');\r\n      clearErrors('joiningDate');\r\n      clearErrors('jobrole');\r\n      return;\r\n    }\r\n    if (id) {\r\n      AdminServices.getStaffById(id, { email: adminInfo.email })\r\n        .then((res) => {\r\n          console.log(res)\r\n          if (res) {\r\n            setValue('fullname', res.fullname);\r\n            setValue('email', res.email);\r\n            setValue('password', res.password);\r\n            setValue('phoneno', res.phoneno);\r\n            setValue('joiningDate', new Date(res.created_at));\r\n            setValue('jobrole', res.jobrole);\r\n            setImageUrl([{ path: res.image, name: res.fullname }]);\r\n            setAdminRoles({\r\n              productread: res.roles.products.read,\r\n              productwrite: res.roles.products.write,\r\n              categoryread: res.roles.category.read,\r\n              categorywrite: res.roles.category.write,\r\n              customerread: res.roles.customer.read,\r\n              customerwrite: res.roles.customer.write,\r\n              orderread: res.roles.order.read,\r\n              orderwrite: res.roles.order.write,\r\n              cuoponread: res.roles.cuopon.read,\r\n              cuoponwrite: res.roles.cuopon.write,\r\n              staffsread: res.roles.staffs.read,\r\n              staffswrite: res.roles.staffs.write,\r\n              inventoryread: res.roles.inventory.read,\r\n              inventorywrite: res.roles.inventory.write,\r\n              enquiryread: res.roles.enquiry.read,\r\n              enquirywrite: res.roles.enquiry.write,\r\n              notificationread: res.roles.notification.read,\r\n              notificationwrite: res.roles.notification.write,\r\n            })\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifyError('There is a server error!');\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id, setValue, isDrawerOpen, adminInfo.email]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      location.pathname === '/setting' ||\r\n      (location.pathname === '/edit-profile' && Cookies.get('adminInfo'))\r\n    ) {\r\n      const user = JSON.parse(Cookies.get('adminInfo'));\r\n      setValue('fullname', user.fullname);\r\n      setValue('email', user.email);\r\n      setValue('phoneno', user.phoneno);\r\n      setValue('jobrole', user.role);\r\n      setImageUrl([{ path: user.image, name: user.fullname }]);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return {\r\n    register,\r\n    handleSubmit,\r\n    onSubmit,\r\n    errors,\r\n    setImageUrl,\r\n    imageUrl,\r\n    adminRoles,\r\n    setAdminRoles,\r\n    handleChecked,\r\n    roles,\r\n  };\r\n};\r\n\r\nexport default useStaffSubmit;\r\n","import React from 'react'\r\n\r\nconst PageTitle = ({ children }) => {\r\n  return (\r\n    <h1 className=\"my-6 text-lg font-bold text-gray-700 dark:text-gray-300\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import requests from \"./httpService\";\r\nconst AdminServices = {\r\n  registerAdmin(body) {\r\n    return requests.post(`/api/admin/register`, body);\r\n  },\r\n\r\n  loginAdmin(body) {\r\n    return requests.post(`/api/admin/login?admin=1`, body);\r\n  },\r\n\r\n  forgetPassword(body) {\r\n    return requests.put(\"/admin/forget-password\", body);\r\n  },\r\n\r\n  resetPassword(body) {\r\n    return requests.put(\"/admin/reset-password\", body);\r\n  },\r\n\r\n  signUpWithProvider(body) {\r\n    return requests.post(\"/admin/signup\", body);\r\n  },\r\n\r\n  addStaff(body) {\r\n    return requests.post(\"/admin/add\", body);\r\n  },\r\n  getAllStaff(body) {\r\n    return requests.get(\"/admin/staffs\", body);\r\n  },\r\n  getStaffById(id, body) {\r\n    return requests.get(`/admin/${id}`, body);\r\n  },\r\n\r\n  updateStaff(id, body) {\r\n    return requests.put(`/admin/update-staffs/${id}`, body);\r\n  },\r\n  deleteStaff(id) {\r\n    return requests.delete(`/admin/${id}`);\r\n  },\r\n};\r\n\r\nexport default AdminServices;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ errorName }) => {\r\n  return (\r\n    <>\r\n      {errorName && (\r\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nconst LabelArea = ({ label }) => {\r\n  return (\r\n    <Label className=\"col-span-4 sm:col-span-2 font-medium text-sm\">\r\n      {label}\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelArea;\r\n","import React from 'react';\r\nimport { Input } from '@windmill/react-ui';\r\n\r\nconst InputArea = ({\r\n  register,\r\n  defaultValue,\r\n  required,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Input\r\n        {...register(`${name}`, {\r\n          required: required ? false : `${label} is required!`,\r\n        })}\r\n        defaultValue={defaultValue}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n","import React, { useContext } from 'react';\r\nimport { Button } from '@windmill/react-ui';\r\n\r\nimport Error from '../components/form/Error';\r\nimport useStaffSubmit from '../hooks/useStaffSubmit';\r\nimport LabelArea from '../components/form/LabelArea';\r\nimport InputArea from '../components/form/InputArea';\r\nimport { AdminContext } from '../context/AdminContext';\r\nimport SelectRole from '../components/form/SelectRole';\r\nimport PageTitle from '../components/Typography/PageTitle';\r\nimport Uploader from '../components/image-uploader/Uploader';\r\n\r\nconst EditProfile = () => {\r\n  const {\r\n    state: { adminInfo },\r\n  } = useContext(AdminContext);\r\n\r\n  const { register, handleSubmit, onSubmit, errors, imageUrl, setImageUrl } =\r\n    useStaffSubmit(adminInfo._id);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Edit Profile</PageTitle>\r\n      <div className=\"container p-6 mx-auto bg-white  dark:bg-gray-800 dark:text-gray-200 rounded-lg\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full\">\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Profile Picture\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <Uploader imageUrl={imageUrl} onChange={setImageUrl} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Name\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Your Name\"\r\n                />\r\n                <Error errorName={errors.name} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Email\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <Error errorName={errors.email} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Contact Number\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Contact Number\"\r\n                  name=\"phone\"\r\n                  type=\"text\"\r\n                  placeholder=\"Contact Number\"\r\n                />\r\n                <Error errorName={errors.phone} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Your Role\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <SelectRole register={register} label=\"Role\" name=\"role\" />\r\n                <Error errorName={errors.role} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-row-reverse pr-6 pb-6\">\r\n            <Button type=\"submit\" className=\"h-12 px-6\">\r\n              {' '}\r\n              Update Profile\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"sourceRoot":""}