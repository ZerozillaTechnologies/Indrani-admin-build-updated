{"version":3,"sources":["pages/EditProfile.js","components/image-uploader/Uploader.js","services/httpService.js","components/form/SelectRole.js","hooks/useStaffSubmit.js","services/AdminServices.js","components/Typography/PageTitle.js","components/form/Error.js","components/form/LabelArea.js","components/form/InputArea.js"],"names":["EditProfile","adminInfo","useContext","AdminContext","state","useStaffSubmit","_id","register","handleSubmit","onSubmit","errors","imageUrl","setImageUrl","className","label","onChange","name","type","placeholder","errorName","email","phone","role","S3_BUCKET","AWS","config","update","accessKeyId","secretAccessKey","myBucket","S3","params","Bucket","region","Uploader","useState","progress","setProgress","useEffect","console","log","files","setFiles","useDropzone","accept","multiple","maxSize","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","forEach","ACL","Body","Key","upload","on","evt","data","Math","round","loaded","total","send","err","Array","isArray","prevState","path","Location","key","thumbs","src","alt","revokeObjectURL","length","ele","idx","instance","axios","create","baseURL","timeout","headers","Accept","interceptors","request","use","Cookies","get","JSON","parse","authorization","token","responseBody","response","requests","url","body","then","post","put","patch","delete","SelectRole","setRole","e","target","value","required","defaultValue","hidden","id","productread","productwrite","categoryread","categorywrite","customerread","customerwrite","orderread","orderwrite","cuoponread","cuoponwrite","staffsread","staffswrite","inventoryread","inventorywrite","enquiryread","enquirywrite","notificationread","notificationwrite","adminRoles","setAdminRoles","location","useLocation","SidebarContext","isDrawerOpen","closeDrawer","setIsUpdate","useForm","setValue","clearErrors","formState","roles","read","write","readvalue","writevalue","AdminServices","getStaffById","res","fullname","password","phoneno","Date","created_at","jobrole","image","products","category","customer","order","cuopon","staffs","inventory","enquiry","notification","catch","notifyError","pathname","user","staffData","joiningDate","updateStaff","notifySuccess","message","registerAdmin","handleChecked","checked","loginAdmin","forgetPassword","resetPassword","signUpWithProvider","addStaff","getAllStaff","deleteStaff","PageTitle","children","Error","LabelArea","InputArea"],"mappings":"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","file":"static/js/27.94d1208e.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Button } from '@windmill/react-ui';\r\n\r\nimport Error from '../components/form/Error';\r\nimport useStaffSubmit from '../hooks/useStaffSubmit';\r\nimport LabelArea from '../components/form/LabelArea';\r\nimport InputArea from '../components/form/InputArea';\r\nimport { AdminContext } from '../context/AdminContext';\r\nimport SelectRole from '../components/form/SelectRole';\r\nimport PageTitle from '../components/Typography/PageTitle';\r\nimport Uploader from '../components/image-uploader/Uploader';\r\n\r\nconst EditProfile = () => {\r\n  const {\r\n    state: { adminInfo },\r\n  } = useContext(AdminContext);\r\n\r\n  const { register, handleSubmit, onSubmit, errors, imageUrl, setImageUrl } =\r\n    useStaffSubmit(adminInfo._id);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Edit Profile</PageTitle>\r\n      <div className=\"container p-6 mx-auto bg-white  dark:bg-gray-800 dark:text-gray-200 rounded-lg\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full\">\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Profile Picture\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <Uploader imageUrl={imageUrl} onChange={setImageUrl} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Name\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Your Name\"\r\n                />\r\n                <Error errorName={errors.name} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Email\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <Error errorName={errors.email} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Contact Number\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Contact Number\"\r\n                  name=\"phone\"\r\n                  type=\"text\"\r\n                  placeholder=\"Contact Number\"\r\n                />\r\n                <Error errorName={errors.phone} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Your Role\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <SelectRole register={register} label=\"Role\" name=\"role\" />\r\n                <Error errorName={errors.role} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-row-reverse pr-6 pb-6\">\r\n            <Button type=\"submit\" className=\"h-12 px-6\">\r\n              {' '}\r\n              Update Profile\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AWS from \"aws-sdk\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FiUploadCloud } from \"react-icons/fi\";\r\n\r\nconst ID = \"AKIASULQMX62UGAJO5VI\";\r\nconst SECRET = \"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\";\r\nconst S3_BUCKET = \"indraniapp\";\r\nconst REGION = \"us-east-2\";\r\n\r\nAWS.config.update({\r\n  accessKeyId: ID,\r\n  secretAccessKey: SECRET,\r\n});\r\nconst myBucket = new AWS.S3({\r\n  params: { Bucket: S3_BUCKET },\r\n  region: REGION,\r\n});\r\nconst Uploader = ({ setImageUrl, imageUrl }) => {\r\n  const [progress, setProgress] = useState(0);\r\n  useEffect(() => {\r\n    console.log(progress);\r\n  }, [progress]);\r\n\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*\",\r\n    multiple: true,\r\n    maxSize: 500000,\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"uploader file has been changed\", files);\r\n    if (files) {\r\n      files.forEach((file) => {\r\n        const params = {\r\n          ACL: \"public-read\",\r\n          Body: file,\r\n          Bucket: S3_BUCKET,\r\n          Key: file.name,\r\n        };\r\n        console.log(\"upload start\");\r\n        myBucket\r\n          .upload(params)\r\n          .on(\"httpUploadProgress\", (evt, data) => {\r\n            console.log(evt, data);\r\n            setProgress(Math.round((evt.loaded / evt.total) * 100));\r\n          })\r\n          .send((err, data) => {\r\n            if (err) {\r\n              console.log(err);\r\n              return;\r\n            }\r\n            if (Array.isArray(imageUrl)) {\r\n              setImageUrl((prevState) => [\r\n                ...prevState,\r\n                { path: data.Location, name: data.key },\r\n              ]);\r\n              console.log(data);\r\n            } else {\r\n              setImageUrl([{ path: data.Location, name: data.key }]);\r\n            }\r\n          });\r\n        // const formData = new FormData();\r\n        // formData.append('img', postFiles);\r\n        // axios({\r\n        //   url: uploadURL,\r\n        //   method: 'POST',\r\n        //   data: formData,\r\n        // })\r\n        //   .then((res) => {\r\n        //     console.log(res.data)\r\n        //     // setImageUrl(`${process.env.REACT_APP_API_BASE_URL}/images/${res.data.images[0]}`);\r\n        //   })\r\n        //   .catch((err) => console.log(err));\r\n      });\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [files]);\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div key={file.name}>\r\n      <div>\r\n        <img\r\n          className=\"inline-flex border-2 border-gray-100 w-24 max-h-24\"\r\n          src={file.preview}\r\n          alt={file.name}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-full text-center\">\r\n      <div\r\n        className=\"px-6 pt-5 pb-6 border-2 border-gray-300 dark:border-gray-600 border-dashed rounded-md cursor-pointer\"\r\n        {...getRootProps()}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <span className=\"mx-auto flex justify-center\">\r\n          <FiUploadCloud className=\"text-3xl text-green-500\" />\r\n        </span>\r\n        <p className=\"text-sm mt-2\">Drag your image here</p>\r\n        <em className=\"text-xs text-gray-400\">\r\n          (Only *.jpeg and *.png images will be accepted)\r\n        </em>\r\n      </div>\r\n      <aside className=\"flex flex-row flex-wrap mt-4\">\r\n        {imageUrl?.length > 0\r\n          ? imageUrl.map((ele, idx) => (\r\n              <img\r\n                key={idx}\r\n                className=\"inline-flex border rounded-md border-gray-100 dark:border-gray-600 w-24 max-h-24 p-2\"\r\n                src={ele.path}\r\n                alt={ele.name}\r\n              />\r\n            ))\r\n          : thumbs}\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n","import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: `${process.env.REACT_APP_API_BASE_URL}`,\r\n  baseURL: `http://192.81.213.186:5000`, //for the production\r\n  // baseURL: `http://localhost:4023`, // for the dev\r\n  // baseURL: `http://localhost:5000`,\r\n  timeout: 500000,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  let adminInfo;\r\n  if (Cookies.get(\"adminInfo\")) {\r\n    adminInfo = JSON.parse(Cookies.get(\"adminInfo\"));\r\n  }\r\n\r\n  return {\r\n    ...config,\r\n    headers: {\r\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\r\n    },\r\n  };\r\n});\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n  get: (url, body, headers) =>\r\n    instance.get(url, body, headers).then(responseBody),\r\n\r\n  post: (url, body, headers) =>\r\n    instance.post(url, body, headers).then(responseBody),\r\n\r\n  put: (url, body, headers) =>\r\n    instance.put(url, body, headers).then(responseBody),\r\n\r\n  patch: (url, body, headers) =>\r\n    instance.patch(url, body, headers).then(responseBody),\r\n\r\n  delete: (url, headers) => instance.delete(url, headers).then(responseBody),\r\n};\r\n\r\nexport default requests;\r\n","import React from 'react';\r\nimport { Select } from '@windmill/react-ui';\r\n\r\nconst SelectRole = ({ setRole, register, name, label }) => {\r\n  return (\r\n    <>\r\n      <Select\r\n        onChange={(e) => setRole(e.target.value)}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n        name={name}\r\n        {...register(`${name}`, {\r\n          required: `${label} is required!`,\r\n        })}\r\n      >\r\n        <option value=\"\" defaultValue hidden>\r\n          Staff role\r\n        </option>\r\n        <option value=\"admin\">Admin</option>\r\n        <option value=\"ceo\">CEO</option>\r\n        <option value=\"manager\">Manager</option>\r\n        <option value=\"accountant\">Accountant</option>\r\n        <option value=\"driver\"> Driver </option>\r\n        <option value=\"security-guard\">Security Guard</option>\r\n        <option value=\"deliver-person\">Delivery Person</option>\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectRole;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Cookies from 'js-cookie';\r\nimport { useLocation } from 'react-router';\r\n\r\nimport AdminServices from '../services/AdminServices';\r\nimport { AdminContext } from '../context/AdminContext';\r\nimport { SidebarContext } from '../context/SidebarContext';\r\nimport { notifyError, notifySuccess } from '../utils/toast';\r\n\r\nconst useStaffSubmit = (id) => {\r\n  const { state } = useContext(AdminContext);\r\n  const { adminInfo } = state;\r\n  const [imageUrl, setImageUrl] = useState([]);\r\n  const [adminRoles, setAdminRoles] = useState({\r\n    productread:false,\r\n    productwrite:false,\r\n    categoryread:false,\r\n    categorywrite:false,\r\n    customerread:false,\r\n    customerwrite:false,\r\n    orderread:false,\r\n    orderwrite:false,\r\n    cuoponread:false,\r\n    cuoponwrite:false,\r\n    staffsread:false,\r\n    staffswrite:false,\r\n    inventoryread:false,\r\n    inventorywrite:false,\r\n    enquiryread:false,\r\n    enquirywrite:false,\r\n    notificationread:false,\r\n    notificationwrite:false,\r\n  });\r\n  const location = useLocation();\r\n  const { isDrawerOpen, closeDrawer, setIsUpdate } = useContext(SidebarContext);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const handleChecked = (e) => {\r\n    setAdminRoles(prevState => ({\r\n      ...prevState,\r\n      [e.target.name]:e.target.checked\r\n    }));\r\n  }\r\n\r\n  const roles = [\r\n    {\r\n      name: \"product\",\r\n      read: \"productread\",\r\n      write: \"productwrite\",\r\n      readvalue: adminRoles.productread,\r\n      writevalue: adminRoles.productwrite,\r\n    },\r\n    {\r\n      name: \"category\",\r\n      read: \"categoryread\",\r\n      write: \"categorywrite\",\r\n      readvalue: adminRoles.categoryread,\r\n      writevalue: adminRoles.categorywrite\r\n    },\r\n    {\r\n      name: \"customer\",\r\n      read: \"customerread\",\r\n      write: \"customerwrite\",\r\n      readvalue: adminRoles.customerread,\r\n      writevalue: adminRoles.customerwrite,\r\n    },\r\n    {\r\n      name: \"order\",\r\n      read: \"orderread\",\r\n      write: \"orderwrite\",\r\n      readvalue: adminRoles.orderread,\r\n      writevalue: adminRoles.orderwrite, \r\n    },\r\n    {\r\n      name: \"cuopon\",\r\n      read: \"cuoponread\",\r\n      write: \"cuoponwrite\",\r\n      readvalue: adminRoles.cuoponread,\r\n      writevalue: adminRoles.cuoponwrite,\r\n    },\r\n    {\r\n      name: \"staffs\",\r\n      read: \"staffsread\",\r\n      write: \"staffswrite\",\r\n      readvalue: adminRoles.staffsread,\r\n      writevalue: adminRoles.staffswrite,\r\n    },\r\n    {\r\n      name: \"inventory\",\r\n      read: \"inventoryread\",\r\n      write: \"inventorywrite\",\r\n      readvalue: adminRoles.inventoryread,\r\n      writevalue: adminRoles.inventorywrite,\r\n    },\r\n    {\r\n      name: \"enquiry\",\r\n      read: \"enquiryread\",\r\n      write: \"enquirywrite\",\r\n      readvalue: adminRoles.enquiryread,\r\n      writevalue: adminRoles.enquirywrite,\r\n    },\r\n    {\r\n      name: \"notification\",\r\n      read: \"notificationread\",\r\n      write: \"notificationwrite\",\r\n      readvalue: adminRoles.notificationread,\r\n      writevalue: adminRoles.notificationwrite,\r\n    },\r\n  ]\r\n\r\n  const onSubmit = (data) => {\r\n    if (!imageUrl) {\r\n      notifyError('Image is required!');\r\n      return;\r\n    }\r\n    const staffData = {\r\n      fullname: data.fullname,\r\n      email: data.email,\r\n      password: data.password,\r\n      phoneno: data.phoneno,\r\n      joiningDate: data.joiningDate,\r\n      jobrole: data.jobrole,\r\n      image: imageUrl[0].path,\r\n      roles: {\r\n          products: {\r\n            read: adminRoles.productread,\r\n            write: adminRoles.productwrite,\r\n          },\r\n          category: {\r\n            read: adminRoles.categoryread,\r\n            write: adminRoles.categoryread,\r\n          },\r\n          customer: {\r\n            read: adminRoles.customerread,\r\n            write: adminRoles.cuoponwrite,\r\n          },\r\n          order: {\r\n            read: adminRoles.orderread,\r\n            write: adminRoles.orderwrite,\r\n          },\r\n          cuopon: {\r\n            read: adminRoles.cuoponread,\r\n            write: adminRoles.cuoponwrite,\r\n          },\r\n          staffs: {\r\n            read: adminRoles.staffsread,\r\n            write: adminRoles.staffswrite,\r\n          },\r\n          inventory: {\r\n            read: adminRoles.inventoryread,\r\n            write: adminRoles.inventorywrite,\r\n          },\r\n          enquiry: {\r\n            read: adminRoles.enquiryread,\r\n            write: adminRoles.enquirywrite,\r\n          },\r\n          notification: {\r\n            read: adminRoles.notificationread,\r\n            write: adminRoles.notificationwrite,\r\n          },\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      console.log(staffData)\r\n      AdminServices.updateStaff(id, staffData)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setIsUpdate(true);\r\n          notifySuccess('Staff Updated Successfully!');\r\n          closeDrawer();\r\n        })\r\n        .catch((err) => {\r\n          notifyError(err.message);\r\n        });\r\n      \r\n    } else {\r\n      AdminServices.registerAdmin(staffData)\r\n        .then((res) => {\r\n          setIsUpdate(true);\r\n          notifySuccess(res.message);\r\n          closeDrawer();\r\n        })\r\n        .catch((err) => notifyError(err.message));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isDrawerOpen) {\r\n      setValue('fullname');\r\n      setValue('email');\r\n      setValue('password');\r\n      setValue('phoneno');\r\n      setValue('joiningDate');\r\n      setValue('jobrole');\r\n      setImageUrl('');\r\n      clearErrors('fullname');\r\n      clearErrors('email');\r\n      clearErrors('password');\r\n      clearErrors('phoneno');\r\n      clearErrors('joiningDate');\r\n      clearErrors('jobrole');\r\n      return;\r\n    }\r\n    if (id) {\r\n      AdminServices.getStaffById(id, { email: adminInfo.email })\r\n        .then((res) => {\r\n          console.log(res)\r\n          if (res) {\r\n            setValue('fullname', res.fullname);\r\n            setValue('email', res.email);\r\n            setValue('password', res.password);\r\n            setValue('phoneno', res.phoneno);\r\n            setValue('joiningDate', new Date(res.created_at));\r\n            setValue('jobrole', res.jobrole);\r\n            setImageUrl([{ path: res.image, name: res.fullname }]);\r\n            setAdminRoles({\r\n              productread: res.roles.products.read,\r\n              productwrite: res.roles.products.write,\r\n              categoryread: res.roles.category.read,\r\n              categorywrite: res.roles.category.write,\r\n              customerread: res.roles.customer.read,\r\n              customerwrite: res.roles.customer.write,\r\n              orderread: res.roles.order.read,\r\n              orderwrite: res.roles.order.write,\r\n              cuoponread: res.roles.cuopon.read,\r\n              cuoponwrite: res.roles.cuopon.write,\r\n              staffsread: res.roles.staffs.read,\r\n              staffswrite: res.roles.staffs.write,\r\n              inventoryread: res.roles.inventory.read,\r\n              inventorywrite: res.roles.inventory.write,\r\n              enquiryread: res.roles.enquiry.read,\r\n              enquirywrite: res.roles.enquiry.write,\r\n              notificationread: res.roles.notification.read,\r\n              notificationwrite: res.roles.notification.write,\r\n            })\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifyError('There is a server error!');\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id, setValue, isDrawerOpen, adminInfo.email]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      location.pathname === '/setting' ||\r\n      (location.pathname === '/edit-profile' && Cookies.get('adminInfo'))\r\n    ) {\r\n      const user = JSON.parse(Cookies.get('adminInfo'));\r\n      setValue('fullname', user.fullname);\r\n      setValue('email', user.email);\r\n      setValue('phoneno', user.phoneno);\r\n      setValue('jobrole', user.role);\r\n      setImageUrl([{ path: user.image, name: user.fullname }]);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return {\r\n    register,\r\n    handleSubmit,\r\n    onSubmit,\r\n    errors,\r\n    setImageUrl,\r\n    imageUrl,\r\n    adminRoles,\r\n    setAdminRoles,\r\n    handleChecked,\r\n    roles,\r\n  };\r\n};\r\n\r\nexport default useStaffSubmit;\r\n","import requests from \"./httpService\";\r\nconst AdminServices = {\r\n  registerAdmin(body) {\r\n    return requests.post(`/api/admin/register`, body);\r\n  },\r\n\r\n  loginAdmin(body) {\r\n    return requests.post(`/api/admin/login?admin=1`, body);\r\n  },\r\n\r\n  forgetPassword(body) {\r\n    return requests.put(\"/admin/forget-password\", body);\r\n  },\r\n\r\n  resetPassword(body) {\r\n    return requests.put(\"/admin/reset-password\", body);\r\n  },\r\n\r\n  signUpWithProvider(body) {\r\n    return requests.post(\"/admin/signup\", body);\r\n  },\r\n\r\n  addStaff(body) {\r\n    return requests.post(\"/admin/add\", body);\r\n  },\r\n  getAllStaff(body) {\r\n    return requests.get(\"/admin/staffs\", body);\r\n  },\r\n  getStaffById(id, body) {\r\n    return requests.get(`/admin/${id}`, body);\r\n  },\r\n\r\n  updateStaff(id, body) {\r\n    return requests.put(`/admin/update-staffs/${id}`, body);\r\n  },\r\n  deleteStaff(id) {\r\n    return requests.delete(`/admin/${id}`);\r\n  },\r\n};\r\n\r\nexport default AdminServices;\r\n","import React from 'react'\r\n\r\nconst PageTitle = ({ children }) => {\r\n  return (\r\n    <h1 className=\"my-6 text-lg font-bold text-gray-700 dark:text-gray-300\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from \"react\";\r\n\r\nconst Error = ({ errorName }) => {\r\n  return (\r\n    <>\r\n      {errorName && (\r\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nconst LabelArea = ({ label }) => {\r\n  return (\r\n    <Label className=\"col-span-4 sm:col-span-2 font-medium text-sm\">\r\n      {label}\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelArea;\r\n","import React from 'react';\r\nimport { Input } from '@windmill/react-ui';\r\n\r\nconst InputArea = ({\r\n  register,\r\n  defaultValue,\r\n  required,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Input\r\n        {...register(`${name}`, {\r\n          required: required ? false : `${label} is required!`,\r\n        })}\r\n        defaultValue={defaultValue}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n"],"sourceRoot":""}